{
	// Place your node-crawl 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
    "Node Import * as Module": {
        "prefix": "impas",
        "body": "import * as $1 from '$2'$0"
    },
    "Node Import": {
        "prefix": "imp",
        "body": "import $1 from '$1'$0"
    },
	"Node Require Custom Log": {
		"prefix": "req-log",
		"body": "const Log = require('${1:../utils}/log')$0"
	},
	"Node Init Custom Log": {
		"prefix": "log-init",
		"body": "const log = new Log('${1:namespace}', { $2 })$0"
	},
	"Node Logger Init": {
		"prefix": "logger-require",
		"body": [
            "const { getLogger } = require('${1:./log}')",
            "",
            "const logger = getLogger('[${2:NAMESPACE}]')$0"
        ]
	},
	"Node Logger Init In TS": {
        "prefix": "logger-import",
		"body": [
            "import getLogger from '${1:./log}'",
            "",
            "const logger = getLogger('[${2:NAMESPACE}]')$0"
        ]
	},
}